{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/pcgr/master/nextflow_schema.json",
    "title": "nf-core/pcgr pipeline parameters",
    "description": "Downstream variant prioritisation using PCGR/CSPR designed to work off nf-core/sarek outputs",
    "type": "object",
    "definitions": {
        "global_options": {
            "title": "Global options",
            "type": "object",
            "description": "High level parameters for both PCGR and CSPR",
            "default": "",
            "properties": {
                "genome": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Genome assembly used to generate VCF files.",
                    "help_text": "PCGR works on outputs of Sarek and as such, this parameter simply denotes the genome assembly build used (GRCh37/GRCh38). The workflow does not download any reference files from iGenomes. ",
                    "default": "grch37"
                },
                "database": {
                    "type": "string",
                    "fa_icon": "fas fa-server",
                    "description": "Path to PCGR data bundle.",
                    "help_text": "The workflow is designed to use docker containers containing the data bundle (default parameter). In the event you use the workflow with conda, you will need to download the data bundle manually and specify its path using this parameter.",
                    "default": null
                }
            },
            "required": ["genome", "database"],
            "fa_icon": "fas fa-globe-americas"
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "description": "Path to valid samplesheet CSV file. Please refer to documentation for valid samplesheet examples.",
                    "help_text": "PCGR is designed to work on the outputs of Sarek. The simplest method is to point to the 'results/variant_calling/<tool>' directory generated by Sarek. Alternatively, you may wish to run PCGR on multiple tool outputs in which case a CSV file is preferred. ",
                    "fa_icon": "fas fa-file-csv"
                },
                "save_intermediates": {
                    "type": "boolean",
                    "description": "Save tabixed, bgzipped and reformatted VCF files from a run?",
                    "fa_icon": "fas fa-folder-open"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "default": "results"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                }
            }
        },
        "pcgr_options": {
            "title": "PCGR options",
            "type": "object",
            "description": "Parameters specific to PCGR somatic reports",
            "default": "",
            "fa_icon": "fas fa-file-alt",
            "properties": {
                "assay": {
                    "type": "string",
                    "fa_icon": "fas fa-flask",
                    "description": "Type of DNA sequencing assay performed for input data (VCF) default: WES",
                    "help_text": "Options: WGS,WES,TARGETED",
                    "default": "WES",
                    "pattern": "^((WGS|WES|TARGETED)*,?)*$",
                    "enum": ["WGS", "WES", "TARGETED"]
                },
                "cpsr_report": {
                    "type": "string",
                    "fa_icon": "fas fa-paste",
                    "description": "CPSR report file (Gzipped JSON - file ending with 'cpsr.<genome_assembly>.json.gz' -  germline report of patient's blood/control sample",
                    "default": null
                },
                "fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Reference fasta file used in Sarek analysis.",
                    "help_text": "Used to normalize variants using bcftools, does not have to be indexed. Check your chromosome ID's against your VCF files (chr1 vs. 1)",
                    "default": null
                },
                "tumor_site": {
                    "type": "number",
                    "fa_icon": "fas fa-male",
                    "description": "Optional integer code to specify primary tumor type/site of query sample",
                    "help_text": "choose any of the following identifiers:\n0 = Any, 1 = Adrenal Gland, 2 = Ampulla of Vater, 3 = Biliary Tract, 4 = Bladder/Urinary Tract, 5 = Bone, 6 = Breast, 7 = Cervix, 8 = CNS/Brain, 9 = Colon/Rectum, 10 = Esophagus/Stomach, 11 = Eye, 12 = Head and Neck, 13 = Kidney, 14 = Liver, 15 = Lung, 16 = Lymphoid, 17 = Myeloid, 18 = Ovary/Fallopian Tube, 19 = Pancreas, 20 = Peripheral Nervous System, 21 = Peritoneum, 22 = Pleura, 23 = Prostate, 24 = Skin, 25 = Soft Tissue, 26 = Testis, 27 = Thymus, 28 = Thyroid, 29 = Uterus, 30 = Vulva/Vagina,\n",
                    "enum": [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                        26, 27, 28, 29, 30
                    ],
                    "default": 0,
                    "minimum": 0,
                    "maximum": 30
                },
                "tumor_purity": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Estimated tumor purity (between 0 and 1, (default: None)",
                    "default": null
                },
                "tumor_ploidy": {
                    "type": "string",
                    "fa_icon": "fas fa-vials",
                    "description": "Estimated tumor ploidy (default: None)",
                    "default": null
                },
                "cna_analysis": {
                    "type": "boolean",
                    "fa_icon": "far fa-copy",
                    "description": "Include somatic copy number alteration analysis.",
                    "help_text": "The workflow will automatically parse Sarek CNA tools for compatibility with PCGR. Specify the file paths in your samplesheet using the column 'cna'."
                },
                "logr_gain": {
                    "type": "number",
                    "fa_icon": "far fa-copy",
                    "default": 0.8,
                    "description": "Log ratio-threshold (minimum) for segments containing copy number gains/amplifications (default: 0.8)"
                },
                "logr_homdel": {
                    "type": "number",
                    "fa_icon": "far fa-copy",
                    "description": "Log ratio-threshold (maximum) for segments containing homozygous deletions (default: -0.8)",
                    "default": -0.8
                },
                "cna_overlap_pct": {
                    "type": "number",
                    "fa_icon": "far fa-copy",
                    "description": "Mean percent overlap between copy number segment and gene transcripts for reporting of gains/losses in tumor suppressor genes/oncogenes, (default: 50)",
                    "default": 50,
                    "minimum": 0,
                    "maximum": 100
                },
                "target_size_mb": {
                    "type": "number",
                    "fa_icon": "fab fa-tumblr",
                    "default": "34",
                    "description": "For mutational burden analysis - approximate protein-coding target size in Mb of sequencing assay (default: 34 WGS/WES)"
                },
                "estimate_tmb": {
                    "type": "boolean",
                    "description": "Estimate tumor mutational burden from the total number of somatic mutations and target region size, default: False",
                    "fa_icon": "fab fa-tumblr"
                },
                "estimate_msi_status": {
                    "type": "boolean",
                    "description": "Predict microsatellite instability status from patterns of somatic mutations/indels, default: False",
                    "fa_icon": "fab fa-tumblr"
                },
                "tmb_algorithm": {
                    "type": "string",
                    "description": "Method for calculation of TMB, all coding variants (Chalmers et al., Genome Medicine, 2017), or non-synonymous variants only, default: all_coding",
                    "default": "all_coding",
                    "pattern": "^((all_coding|nonsyn)*,?)*$",
                    "enum": ["all_coding", "nonsyn"],
                    "fa_icon": "fab fa-tumblr"
                },
                "estimate_signatures": {
                    "type": "boolean",
                    "fa_icon": "fas fa-signature",
                    "description": "Estimate relative contributions of reference mutational signatures in query sample and detect potential kataegis events, default: False"
                },
                "min_mutations_signatures": {
                    "type": "number",
                    "fa_icon": "fas fa-signature",
                    "description": "Minimum number of SNVs required for reconstruction of mutational signatures (SBS) by MutationalPatterns (default: 200, minimum n = 100)",
                    "default": 200,
                    "minimum": 100,
                    "maximum": 1000
                },
                "all_reference_signatures": {
                    "type": "boolean",
                    "fa_icon": "fas fa-signature",
                    "description": "Use all reference mutational signatures (SBS, n = 67) in signature reconstruction rather than only those already attributed to the tumor type (default: False)"
                },
                "include_artefact_signatures": {
                    "type": "boolean",
                    "fa_icon": "fas fa-signature",
                    "description": "Include sequencing artefacts in the collection of reference signatures (default: False)"
                },
                "prevalence_reference_signatures": {
                    "type": "number",
                    "fa_icon": "fas fa-signature",
                    "description": "Minimum tumor-type prevalence (in percent) of reference signatures to be included in refitting procedure (default: 5)",
                    "default": 5,
                    "minimum": 1,
                    "maximum": 20,
                    "enum": [1, 2, 5, 10, 15, 20]
                },
                "include_trials": {
                    "type": "boolean",
                    "fa_icon": "fas fa-chart-line",
                    "description": "Include relevant ongoing or future clinical trials, focusing on studies with molecularly targeted interventions"
                },
                "tumor_dp_tag": {
                    "type": "string",
                    "fa_icon": "fas fa-tags",
                    "description": "Specify VCF INFO tag for sequencing depth (tumor, must be Type=Integer, default: TDP)",
                    "default": "TDP",
                    "help_text": "The workflow attempts to automatically assign new VCF info and header fields denoting the sequencing depth for the tumor sample with the TDP tag. "
                },
                "tumor_af_tag": {
                    "type": "string",
                    "fa_icon": "fas fa-tags",
                    "description": "Specify VCF INFO tag for variant allelic fraction (tumor,  must be Type=Float, default: TAF)",
                    "default": "TAF",
                    "help_text": "The workflow attempts to automatically assign new VCF info and header fields denoting the variant allelic fraction for the tumor sample with the TAF tag. "
                },
                "control_dp_tag": {
                    "type": "string",
                    "fa_icon": "fas fa-tag",
                    "description": "Specify VCF INFO tag for sequencing depth (control, must be Type=Integer, default: NDP)",
                    "default": "NDP",
                    "help_text": "The workflow attempts to automatically assign new VCF info and header fields denoting the sequencing depth for the normal sample with the NDP tag. "
                },
                "control_af_tag": {
                    "type": "string",
                    "fa_icon": "fas fa-tag",
                    "description": "Specify VCF INFO tag for variant allelic fraction (control, must be Type=Float, default: NAF)",
                    "default": "NAF",
                    "help_text": "The workflow attempts to automatically assign new VCF info and header fields denoting the variant allelic fraction for the normal sample with the NAF tag. "
                },
                "call_conf_tag": {
                    "type": "string",
                    "fa_icon": "fas fa-tag",
                    "description": "Specify VCF INFO tag for somatic variant call confidence (must be categorical, e.g. Type=String, default: _NA_)",
                    "default": "TAL",
                    "help_text": "BETA: the workflow will attempt to determine consensus calls of variants i.e mutect2,freebayes,strelka denotes the variant was called by three tools. "
                },
                "tumor_dp_min": {
                    "type": "number",
                    "fa_icon": "fas fa-sort-amount-down",
                    "description": "If VCF INFO tag for sequencing depth (tumor) is specified and found, set minimum required depth for inclusion in report (default: 0)",
                    "default": 0
                },
                "tumor_af_min": {
                    "type": "number",
                    "fa_icon": "fas fa-sort-amount-down",
                    "description": "If VCF INFO tag for variant allelic fraction (tumor) is specified and found, set minimum required AF for inclusion in report (default: 0)",
                    "default": 0
                },
                "control_dp_min": {
                    "type": "number",
                    "fa_icon": "fas fa-sort-amount-down",
                    "description": "If VCF INFO tag for sequencing depth (control) is specified and found, set minimum required depth for inclusion in report (default: 0)",
                    "default": 0
                },
                "control_af_max": {
                    "type": "number",
                    "fa_icon": "fas fa-sort-amount-down",
                    "description": "If VCF INFO tag for variant allelic fraction (control) is specified and found, set maximum tolerated AF for inclusion in report (default: 1)",
                    "default": 1
                }
            }
        },
        "pcgr_tumor_only_options": {
            "title": "PCGR (Tumor-only) options",
            "type": "object",
            "description": "Parameters specific to PCGR tumor only mode.",
            "default": "",
            "properties": {
                "tumor_only": {
                    "type": "boolean",
                    "fa_icon": "fas fa-id-card",
                    "description": "Input VCF comes from tumor-only sequencing, calls will be filtered for variants of germline origin, (default: False)",
                    "default": false
                },
                "cell_line": {
                    "type": "boolean",
                    "fa_icon": "fas fa-address-card",
                    "description": "Input VCF comes from tumor cell line sequencing (requires --tumor_only), calls will be filtered for variants of germline origin, (default: False)"
                },
                "pon_vcf": {
                    "type": "string",
                    "fa_icon": "fas fa-address-card",
                    "description": "VCF file with germline calls from Panel of Normals (PON) - i.e. blacklisted variants, (default: None)",
                    "default": null
                },
                "exclude_pon": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Exclude variants occurring in PoN (Panel of Normals, if provided as VCF (--pon_vcf), default: False)",
                    "default": false
                },
                "exclude_likely_hom_germline": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Exclude likely homozygous germline variants (100 pct allelic fraction for alternate allele in tumor, very unlikely somatic event, default: False)"
                },
                "exclude_likely_het_germline": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Exclude likely heterozygous germline variants (40-60 pct allelic fraction, AND presence in dbSNP + gnomAD, AND not existing as somatic event in COSMIC/TCGA, default: False)"
                },
                "exclude_dbsnp_nonsomatic": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Exclude variants found in dbSNP (only those that are NOT found in ClinVar(somatic origin)/DoCM/TCGA/COSMIC, defult: False)"
                },
                "exclude_nonexonic": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Exclude non-exonic variants, (default: False)"
                },
                "maf_onekg_eur": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - European pop, default: 0.002)",
                    "default": 0.002
                },
                "maf_onekg_amr": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - Ad mixed American pop, default: 0.002)",
                    "default": 0.002
                },
                "maf_onekg_afr": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - African pop, default: 0.002)",
                    "default": 0.002
                },
                "maf_onekg_eas": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project -East Asian pop, default: 0.002)",
                    "default": 0.002
                },
                "maf_onekg_sas": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - South Asian pop, default: 0.002)",
                    "default": 0.002
                },
                "maf_onekg_global": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - Global pop, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_nfe": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - European (non-Finnish), default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_asj": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - Ashkenazi Jewish, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_fin": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - European (Finnish), default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_oth": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - Other, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_amr": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - Latino/Admixed American, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_afr": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - African/African-American, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_eas": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - East Asian, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_sas": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - South Asian, default: 0.002)",
                    "default": 0.002
                },
                "maf_gnomad_global": {
                    "type": "number",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - global population, default: 0.002)",
                    "default": 0.002
                }
            },
            "fa_icon": "fas fa-address-card"
        },
        "cspr_options": {
            "title": "CSPR options",
            "type": "object",
            "description": "Parameters specific to CPSR germline reports",
            "default": "",
            "properties": {
                "panel_id": {
                    "type": "number",
                    "fa_icon": "fas fa-list-ol",
                    "description": "Select the virtual gene panel for cancer predisposition reports.",
                    "help_text": "Virtual panels derived from Genomics England PanelApp see https://sigven.github.io/cpsr/articles/virtual_panels.html for more information.\n\nN.B: Only used with --mode 'CPSR'",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 42
                },
                "diagnostic_grade_only": {
                    "type": "boolean",
                    "fa_icon": "fas fa-clinic-medical",
                    "description": "For panel_id's 1-42 (Genomics England PanelApp) - consider genes with a GREEN status only, default: False"
                },
                "ignore_noncoding": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Do not list non-coding variants in HTML report, default: False"
                },
                "pop_gnomad": {
                    "type": "string",
                    "fa_icon": "fas fa-globe-americas",
                    "description": "Population source in gnomAD used for variant frequency assessment (ACMG classification), default: nfe",
                    "default": "nfe",
                    "pattern": "^((afr|amr|eas|sas|asj|nfe|fin|global)*,?)*$",
                    "enum": ["afr", "amr", "eas", "sas", "asj", "nfe", "fin", "global"]
                },
                "maf_upper_threshold": {
                    "type": "number",
                    "fa_icon": "fas fa-chart-line",
                    "description": "Upper MAF limit (gnomAD global population frequency) for variants to be included in the report, default: 0.9",
                    "default": 0.9
                },
                "classify_all": {
                    "type": "boolean",
                    "fa_icon": "fas fa-search-plus",
                    "description": "Provide CPSR variant classifications (TIER 1-5) also for variants with exising ClinVar classifications in output TSV, default: False"
                },
                "clinvar_ignore_noncancer": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Ignore (exclude from report) ClinVar-classified variants reported only for phenotypes/conditions NOT related to cancer, default: False"
                }
            },
            "fa_icon": "fas fa-file-alt"
        },
        "vcf_filtering": {
            "title": "VCF filtering",
            "type": "object",
            "description": "Pass a valid filtering expression to bcftools filter.",
            "default": "",
            "help_text": "Apply a filtering expression of your choice to each germline/somatic VCF file. \n\nExamples of valid filtering expressions are available here: https://samtools.github.io/bcftools/howtos/filtering.html\n\nNB: escape double quotes in the filtering expression with a backslash.",
            "fa_icon": "fas fa-filter",
            "properties": {
                "filter_deepvariant": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "default": "\"-i'FORMAT/DP>10'\"",
                    "description": "Apply filtering expression to DeepVariant VCF (germline) using bcftools filter."
                },
                "filter_freebayes_germline": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to FreeBayes (germline) using bcftools filter."
                },
                "filter_freebayes_somatic": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to FreeBayes (somatic/tumor-only) using bcftools filter."
                },
                "filter_haplotypecaller": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to GATK HaplotypeCaller (germline) using bcftools filter."
                },
                "filter_mutect2": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to GATK Mutect2 (somatic/tumor-only) using bcftools filter."
                },
                "filter_strelka_indels": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to Illumina Strelka Indels (somatic) using bcftools filter."
                },
                "filter_strelka_snvs": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to Illumina Strelka snvs (somatic) using bcftools filter."
                },
                "filter_strelka_variants": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "description": "Apply filtering expression to Illumina Strelka variants (germline/tumor-only) using bcftools filter."
                }
            }
        },
        "vep_options": {
            "title": "VEP options",
            "type": "object",
            "description": "VEP parameters used for both PCGR and CPSR",
            "default": "",
            "fa_icon": "fas fa-database",
            "properties": {
                "vep_n_forks": {
                    "type": "number",
                    "fa_icon": "fas fa-code-branch",
                    "description": "Number of forks (option '--fork' in VEP), default: 4",
                    "default": 4
                },
                "vep_buffer_size": {
                    "type": "number",
                    "fa_icon": "fab fa-buffer",
                    "description": "Variant buffer size (variants read into memory simultaneously, option '--buffer_size' in VEP). Set to lower to reduce memory usage, default: 500",
                    "default": 500
                },
                "vep_gencode_all": {
                    "type": "boolean",
                    "fa_icon": "fas fa-bars",
                    "description": "Consider all GENCODE transcripts with Variant Effect Predictor (VEP) (option '--gencode_basic' in VEP is used by default).",
                    "default": true
                },
                "vep_pick_order": {
                    "type": "string",
                    "fa_icon": "fas fa-sort-amount-down-alt",
                    "description": "Comma-separated string of ordered transcript properties for primary variant pick                     ( option '--pick_order' in VEP), default: canonical,appris,biotype,ccds,rank,tsl,length,mane",
                    "default": "canonical,appris,biotype,ccds,rank,tsl,length,mane"
                },
                "vep_no_intergenic": {
                    "type": "boolean",
                    "fa_icon": "fas fa-eye-slash",
                    "description": "Skip intergenic variants during processing (option '--no_intergenic' in VEP), default: False"
                }
            },
            "help_text": ""
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/global_options"
        },
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/pcgr_options"
        },
        {
            "$ref": "#/definitions/pcgr_tumor_only_options"
        },
        {
            "$ref": "#/definitions/cspr_options"
        },
        {
            "$ref": "#/definitions/vcf_filtering"
        },
        {
            "$ref": "#/definitions/vep_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
